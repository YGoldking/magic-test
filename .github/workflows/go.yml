name: Go

on:
  push:
#    branches: [ main ]
    tags:
      - v*
#  pull_request:
#    branches: [ main ]

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            ${{ github.ref }}
            ${{ steps.Changelog.outputs.changelog }}


  build_release:
    name: Build release
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest,macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            x7z_name: Linux
            bin_name: magic
            arch_amd64: amd64
            arch_amd32: amd32
          - os: macos-latest
            x7z_name: Mac
            bin_name: magic
          - os: windows-latest
            x7z_name: Win
            bin_name: magic.exe
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

#      - name: Install Linux Go
#        if: matrix.os == 'ubuntu-latest'
#      - name: Install macOS Go
#        if: matrix.os == 'macos-latest'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Build
        run: |
          go build -v ./magic.go
          7z a -r magic-test_${{ matrix.x7z_name }}-x64.7z ${{ matrix.bin_name }}

      - name: Upload Release
        id: upload-release-asset
        uses: actions/upload-release-asset@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./magic-test_${{ matrix.x7z_name }}-x64.7z
          asset_name: magic-test_${{ matrix.x7z_name }}-x64.7z
          asset_content_type: application/x-7z-compressed
# 旧的
#  build:
#    runs-on: ubuntu-latest
#    outputs:
#      upload_url: ${{ steps.step_upload_url.outputs.upload_url }}
#    steps:
#    - id: step_upload_url
#      run: echo "::set-output name=upload_url::${{ steps.create_release.outputs.upload_url }}"
#    - uses: actions/checkout@v2
#
#    - name: Set up Go
#      uses: actions/setup-go@v2
#      with:
#        go-version: 1.16
#
#    - name: Build
#      run: |
#        go build -v ./magic.go
#        7z a -r magic-test_linux-x64.7z magic
#
#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@main
#      env:
#        GITHUB_TOKEN: ${{ secrets.TOKEN }}
#      with:
#        tag_name: ${{ github.ref }}
#        release_name: magic-test ${{ github.ref }}
#        draft: false
#        prerelease: false
##
#    - name: Upload Release
#      id: upload-release-asset
#      uses: actions/upload-release-asset@main
#      env:
#        GITHUB_TOKEN: ${{ secrets.TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: ./magic-test_linux-x64.7z
#        asset_name: magic-test_linux-x64.7z
#        asset_content_type: application/x-7z-compressed
#
#  buildMac:
#    runs-on: macos-latest
#    needs: build
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Go
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.16
#      - name: Build
#        run: |
#           go build -v ./magic.go
#           7z a -r magic-test_Macos-x64.7z magic
#      - name: Upload Release
#        id: upload-release-asset
#        uses: actions/upload-release-asset@main
#        env:
#          GITHUB_TOKEN: ${{ secrets.TOKEN }}
#        with:
#          upload_url: ${{ needs.build.outputs.upload_url }}
#          asset_path: ./magic-test_Macos-x64.7z
#          asset_name: magic-test_Macos-x64.7z
#          asset_content_type: application/x-7z-compressed